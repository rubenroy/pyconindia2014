events = [{'start': {'dateTime': '2014-09-26T08:30:00+05:30'}, 'end': {'dateTime': '2014-09-26T09:00:00+05:30'}, 'description': '', 'summary': 'Registrations & Breakfast'}, {'start': {'dateTime': '2014-09-26T09:00:00+05:30'}, 'end': {'dateTime': '2014-09-26T09:30:00+05:30'}, 'description': '', 'summary': 'Introductions'}, {'start': {'dateTime': '2014-09-26T09:30:00+05:30'}, 'description': 'Speaker:Kracekumar Ramaraju\nSection:Workshops\nTechnical level:Beginner\n\nOBJECTIVE\n\nTo teach participants to program in Python with confidence. At the end of the sessions participants should be confident enough to write standalone python program.\n\nDESCRIPTION\n\nBest part of python is with 50 lines of code, it is possible to do useful task. Not yet convinced see an example Song downloader. Yes old code (42 lines).  \n\nThe workshop will be tailored for beginners. The workshop will cover basic concepts like  \n\nVariables\nNumbers \nConditional branching (if else) \nLoops (for loop) \nData structure - List, dictionary\nFunctions\nFile handling - Reading and writing to file\nGetting user input\ninbuilt functions like sum, min, max\n\nYes in 3 hours I will be covering all the above concepts. All the above mentioned concepts will be covered hands on with exercises.  \n\nWorkshop Repo: https://github.com/kracekumar/learnpythoninminutes\n\nREQUIREMENTS\n\nLaptop with Python 2.7 installed https://www.python.org/download/releases/2.7/.  \n\nText editor setup like Sublime Text \n\nMac OS X \n\nWindows 7 and above \n\nGNU/Linux \n\nSPEAKER BIO\n\nKracekumar works at Recruiterbox. Python occupies most of his time. Whenever he needs to write code it is mostly Python.  \n\nKracekumar has handled quite a number of python workshops. Workshops were of few hours, one day or two days. I enjoy teaching python. April month bangpypers workshop conducted by me received very well \n\nKracekumar has built web applications with Django, Flask and other libraries.  \n\nGithub: https://github.com/kracekumar\nBlog: http://kracekumar.com\n\nLINKS\n\n- Quick introduction to python: http://kracekumar.com/post/71171551647/introduction-to-python\n- Python by example exercise: https://github.com/kracekumar/pythonbyexamplestutorial/tree/master\n- Pymonth 2013, Introduction to python: https://github.com/kracekumar/python-training\nFunnel Page: http://in.pycon.org/funnel/2014/154-learn-python-in-minutes\n', 'end': {'dateTime': '2014-09-26T12:30:00+05:30'}, 'location': 'Audi 1', 'summary': 'Learn python in minutes by Kracekumar Ramaraju'}, {'start': {'dateTime': '2014-09-26T09:30:00+05:30'}, 'description': "Speaker:Yashin Mehaboobe\nSection:Workshops\nTechnical level:Intermediate\n\nOBJECTIVE\n\nThis talk will be a hands on session that will cover how to create new security tools using Python. We'll go over the basics of python, how to utilize various modules and mainly on how Python can be utilized in various different security domains.\n\nDESCRIPTION\n\nAutomated tools make up a large part of a penetration test or a forensic investigation. There are a large amount of tools available for almost every security related job, but sometimes the available tools just won't do for a particular scenario. This is when you need to start coding your new tool or improve upon an existing tool. Python is one of the tools widely used for this purpose. Its ease of use along with the availability of a large amount of modules have made it the language of choice for many penetration testers.  \n\nThis talk will be divided into 4 domains:\n1. Network penetration testing:\nIntroduction to modules such as socket, scapy !@# for network based attacks and defences. After that attendees will learn how to create a sniffer, a packet crafter and more in Python utilizing the information learned.\n2. Malware Analysis:\npefile,yara,volatility and other malware analysis modules are introduced. Then a sample demonstration of how to create a yara based malware detection platform.\n3. Web app testing:\nIntroduction to modules such as requests,mechanize and BeautifulSoup and how it can help in a webapp pentest.\n4. Exploit and payload generation:\nThis section will mainly focus on memory based attacks and how to call various system API from within Python. Attendees will also learn how to inject payload into memory and create custom payloads using Python.\n\nREQUIREMENTS\n\nUbuntu/Windows with Python2.7\nFollowing libraries:\nscapy:http://www.secdev.org/projects/scapy/\nimpacket:http://corelabs.coresecurity.com/index.php?module=Wiki&action=view&type=tool&name=Impacket\nrequests:http://docs.python-requests.org/en/latest/user/install/#install\nBeautifulSoup:http://www.crummy.com/software/BeautifulSoup/bs4/doc/\nKeyczar:http://www.keyczar.org/\npefile:https://code.google.com/p/pefile/\nyara:https://plusvic.github.io/yara/\n\nSPEAKER BIO\n\nYashin Mehaboobe is a security researcher with the OpenSecurity and a Student Partner with Microsoft. His areas of interest in this field span hardware security,network security, malware analysis and reverse engineering. He had discovered a denial of service vulnerability in Android that he reported to Google and presented at Defcon Kerala. His work includes creating a static file based web application fingerprinting script for nmap, automated malware detection system for the Raspberry Pi, a network proxy in Python and a malware analysis framework in Python. He's been also invited to speak at HITB Asmterdam, Defcon Bangalore,Nullcon, c0c0n and Toorcon San Diego.\n\nLINKS\n\nResume:\nhttps://docs.google.com/document/d/1QZf9l6Wg96SLMVeiK8kQ3hBlyWjB6Ssy1t96GBy80Xo\nSlides:\nhttp://slideshare.net/yashinm\nGithub:\nhttp://github.com/sp3ctr3\nLinkedIn:\nhttp://in.linkedin.com/pub/yashin-mehaboobe/38/a2/367\nFunnel Page: http://in.pycon.org/funnel/2014/115-security-toolsmithing-writing-security-tools-in-python\n", 'end': {'dateTime': '2014-09-26T12:30:00+05:30'}, 'location': 'Audi 2', 'summary': 'Security Toolsmithing: Writing security tools in Python by Yashin Mehaboobe'}, {'start': {'dateTime': '2014-09-26T09:30:00+05:30'}, 'description': 'Speaker:Shashank Shekhar\nSection:Workshops\nTechnical level:Intermediate\n\nOBJECTIVE\n\nThis workshop will start from the basics of web scraping and proceed to the techniques required to scrape even the hard-to-scrape sites and running concurrent scrapers to scale up the process.  \n\nHard-to-scrape can be described as sites which load the DOM with Javascript, need authentication, etc.\n\nDESCRIPTION\n\nPython and available modules make Web Scraping an easy task.  \n\nBut some sites require you to be creative in your approach in writing your scraping solutions. e.g. appannie.com, jelly.com  \n\nIn this workshop we will discuss about such common roadblocks and how to overcome them.  \n\nWe will also discuss how to introduce concurrency to your scrapers.\n\nREQUIREMENTS\n\nA laptop with:\n- Linux\n- Internet Connectivity (Provided at the Venue?)\n- Python\n- BeautifulSoup4\n- Requests\n- Selenium\n- Chrome/Firefox\n- Redis Server\n- Redis(python wrapper)\n- Celery-with-Redis\n\nSPEAKER BIO\n\nI am Shashank Shekhar.  \n\nI work as a Developer in Noida. I spend most of my time making REST APIs and web scrapers in Python.  \nFunnel Page: http://in.pycon.org/funnel/2014/124-scrape-anything-even-the-most-difficult-sites\n', 'end': {'dateTime': '2014-09-26T12:30:00+05:30'}, 'location': 'Audi 3', 'summary': 'Scrape Anything - Even the most difficult sites by Shashank Shekhar'}, {'start': {'dateTime': '2014-09-26T13:00:00+05:30'}, 'description': 'Speaker:Kushal Das\nSection:Workshops\nTechnical level:Beginner\n\nOBJECTIVE\n\nTo learn how to write documentation for your codebases. Documentation is the key for communication and developers are the best person to start writing it. Projects can succeed or fail because of their documentation. \n\nDESCRIPTION\n\nIn the workshop the people will be introduced to reStructuredText & sphinx. Starting from quick-start of a project to document organization, code and topic cross-referencing, indexing. We will also go through running tests from your documentation, initial ideas on themes and deployment in readthedocs.\nLast year this workshop was very well accepted among the participants.  \n\nQUICK SUMMARY OF THE WORKSHOP\n\nIntroduction to reStructuredText\nIntroduction to sphinx\nA project structure with docs\nhands-on tutorial with sphinx\nIntegration with readthedocs\n\nTAKEAWAY\n\nThe participants should be able to start working on documentation of their respective projects or start contributing to other projects using sphinx and other tools. \n\nREQUIREMENTS\n\npython-sphinx\nAn open mind to learn\n\nSPEAKER BIO\n\nKushal Das is a core developer of CPython. He is a Fedora Ambassador and also fellow of Python Software Foundation.  \n\nHe is a regular speaker in different technical conferences including previous PyCon(s) and also does Python workshops in various events & engineering colleges.  \n\nHe also wrote a beginner Python book called Python for you and me which is targeted to the students for fast paced learning and available freely online .\n\nLINKS\n\nhttp://kushaldas.in/talks/documentyourcode/#/step-1\nhttp://www.dgplug.org/irclogs/2012/rst-primer/\nhttps://fedoraproject.org/wiki/User:Kushal#Talks_.26_Workshops\nFunnel Page: http://in.pycon.org/funnel/2014/128-document-your-code\n', 'end': {'dateTime': '2014-09-26T16:00:00+05:30'}, 'location': 'Audi 1', 'summary': 'Document your code by Kushal Das'}, {'start': {'dateTime': '2014-09-26T13:00:00+05:30'}, 'description': 'Speaker:Sivasubramaniam Arunachalam\nSection:Workshops\nTechnical level:Beginner\n\nOBJECTIVE\n\nThis workshop will focus on how to get started with Django. We will be building a small usable web application which involves the core concepts of Django framework like models, forms, templates and admin interface, etc.. During the course of the workshop, the best practices for core areas and Test Driven Development strategies will be discussed. At the end, suggestions will be provided to take the the knowledge forward with the required resources.\n\nDESCRIPTION\n\nThe workshop will starts with setting up the correct project structure, TDD specific environments and a successful hello world with MTV flow using various Django components.\nAfter that a web application to maintain the personal movie catalog will be developed iteratively using 11 different steps. At the end, it will be deployed to the production like environment using nginx and uWSGI.  \n\nREQUIREMENTS\n\nThe participants are expected to be familiar with basic web related stuffs like HTTP, HTML, CSS, Javascript, MVC concepts and SQL.  \n\nPrerequisites:\nLinux or Windows\nPython 2.7.8\nDjango 1.7\nSelenium\nGit\nYour favorite text editor or IDE\nA modern web browser  \n\nSetup Instructions:  \n\nWindows : https://gist.github.com/sivaa/cf29434e5b09a0854f26 \n\nLinux       : https://gist.github.com/sivaa/7a531022706ac746d944 \n\nRepo(Draft): https://github.com/sivaa/pycon2014-django-workshop \n\nSPEAKER BIO\n\nSenior developer at NetApp India Private Limited and working with Django from 0.95.  \n\nSLIDES\n\n\nhttps://github.com/sivaa/pycon2014-django-workshop\n\n\nLINKS\n\nhttps://github.com/sivaa/django-workshop (Used in http://www.meetup.com/BangPypers/events/125797552/)\nhttps://github.com/sivaa/django-tdd (Used in http://www.meetup.com/BangPypers/events/125797622/)\nhttp://www.slideshare.net/sivasubramaniam3/whats-new-in-django-16\nhttp://www.slideshare.net/sivasubramaniam3/introduction-to-test-driven-development-32882759\nhttp://www.slideshare.net/sivasubramaniam3/python-for-high-school-programmers\nhttp://www.slideshare.net/sivasubramaniam3/introduction-to-browser-internals\nhttp://www.slideshare.net/sivasubramaniam3/introduction-to-cloud-computing\nhttp://www.slideshare.net/sivasubramaniam3/web-sockets-in-java-ee-7-javaone-2013\nFunnel Page: http://in.pycon.org/funnel/2014/176-getting-started-with-django\n', 'end': {'dateTime': '2014-09-26T16:00:00+05:30'}, 'location': 'Audi 2', 'summary': 'Getting Started with Django by Sivasubramaniam Arunachalam'}, {'start': {'dateTime': '2014-09-26T13:00:00+05:30'}, 'description': 'Speaker:Akshay Arora\nSection:Workshops\nTechnical level:Beginner\n\nOBJECTIVE\n\nShowcase ease of application development for mobiles using python Framework "Kivy".  \n\nThe main objective would be to guide people into developing their first application for mobiles.  To showcase how the same application can be deployed to linux, windows, android, iOS, Mac without the user having to change anything in their code.\n\nDESCRIPTION\n\nKivy is a Python framework that has it\'s roots in Natural User Interfaces and augmented reality work.  \n\nKivy was designed from the ground up keeping in mind the new and up and coming natural interfaces like "Touch", and to take advantage of modern gpus for extracting performance for user interfaces.  \n\nThis results is a unique user experience making it dead simple for developers to target devices like a mobile phone.  \n\nThe main goal of this work shop is to showcase how the abstraction of fundamentals like user input and usage of gpu accelerated interfaces through the kivy framework has made application for mobile development dead simple.  \n\n"Give us time and we will teach your dog to program". Not really! but you should get a idea of how simple it is when we showcase 12-16 year olds developing mobile applications. This is the "power of python".\n\nREQUIREMENTS\n\nOne fairly recent Laptop, anything with a gpu that supports OpenGL ES 2.0 or above.  \n\nEven integrated Intel gpus from the last 4+ years usually support this feature.  \n\nAndroid device only if you want to test and deploy to a mobile.  \n\nPeople interested in testing on iOs can bring a their iOs device. iOS devices will only work if you have a developer license from Apple and a mac device that is running latest Xcode.  \n\nSPEAKER BIO\n\nI have been working with linux, open source off and on since the last 12+ years, I only got into contributing back open source with kivy.  \n\nI  am one of the core devs at kivy http://kivy.org/#aboutus\nYou can take a look at my public work here  http://github.com/akshayaurora \n\nThe project has a amazing open community always open to help and to embrace new comers. Don\'t hesitate to come join us at #kivy on irc.freenode.net  \n\nI have been a mentor for gsoc projects around kivy for the last two years, this being my third year.  \n\nProfessionally I have been freelancing around mobile development and other projects around and using kivy for the last few years.\n\nSLIDES\n\n\nhttps://docs.google.com/presentation/d/1zoyqnnDqpXRPmZ1pLYu05cWMg-l9qt2657uGFozZWig\n\n\nLINKS\n\nThe slides linked above are a work in progress, will keep updating them till they are complete.\nhttp://kivy.org kivy website\nhttp://wiki.kivy.org User maintained list of kivy applications snippets, talks and apps made using kivy\nhttp://kivy.org/#gallery Gallery of projects showcased using kivy\nhttp://github.com/kivy Projects in and around kivy.\nhttp://github.com/kivy-garden User maintained widgets and extensions for kivy.\ncontact me at `quanon` on #kivy @ irc.freenode.net\nFunnel Page: http://in.pycon.org/funnel/2014/220-mobile-application-development-with-python-kivy\n', 'end': {'dateTime': '2014-09-26T16:00:00+05:30'}, 'location': 'Audi 3', 'summary': 'Mobile Application development with python(kivy) by Akshay Arora'}, {'start': {'dateTime': '2014-09-26T16:00:00+05:30'}, 'description': 'Speaker:Anand Chitipothu\nSection:Workshops\nTechnical level:Intermediate\n\nOBJECTIVE\n\nWorkshop to understand decorators in detail. At the end of the workshop, the participants will be able to write decorators without any confusion, including the ones that take arguments.\n\nDESCRIPTION\n\nDecorators are heavily used in modern python libraries and web frameworks. But they are still mystery to many people. In this 3-hour long workshop I plan to explain the concept of decorators in detail using lot of examples and exercises.  \n\nThis is a stripped and compressed version of 3-day advanced python course offered by the author, covering only decorators.  \n\nOutline:  \n\nFunctions that take functions as arguments\nFunctions returning functions\nDecorators\nDecorators that take arguments\nBuilding a simple web framework using decorators\n\nThis workshop is targeted at people who have been using Python and want to decorators in detail.  \n\nThis workshop is not suitable for people who are new to Python. If you have never used a decorator before, this course is not for you.\n\nREQUIREMENTS\n\nA laptop with Python 2.7 installed.\nShould be comfortable with Python and have basic idea of what decorators are.\n\nSPEAKER BIO\n\nAnand Chitipothu is a software consultant and trainer. He offers corporate trainings on Python and conducts public courses on\nPython programming in Bangalore.  \n\nHe is an active member of Indian Python community, coordinator of PyCon India 2012, organized PythonMonth in 2013 and elected member of PSF.  \n\nHe is co-author of web.py, a micro web framework in Python and currently works for Internet Archive.\n\nLINKS\n\nhttp://anandology.com/\nhttp://anandology.com/python-practice-book/\nhttp://nbviewer.ipython.org/gist/anandology/7460837/advanced-python-day1.ipynb\nFunnel Page: http://in.pycon.org/funnel/2014/197-decorators-demystified\n', 'end': {'dateTime': '2014-09-26T19:00:00+05:30'}, 'location': 'Audi 1', 'summary': 'Decorators demystified by Anand Chitipothu'}, {'start': {'dateTime': '2014-09-26T16:00:00+05:30'}, 'description': 'Speaker:Anisha Narang\nSection:Workshops\nTechnical level:Beginner\n\nOBJECTIVE\n\nTo enable the participants to write automated tests for web applications. This will be a hands on session where you will get introduced to Selenium and gradually move towards writing tests using Selenium with Python bindings. This will include a brief on selenium, play and record using Selenium IDE, writing and maintaining the test scripts and test report generation. \n\nDESCRIPTION\n\nThis workshop is tailored for beginners willing to learn Selenium with Python as last year\'s talk on the same received a vibrant response from the audience.  \n\nIntroduction to Selenium\nBrief about test automation and why/how is it a need\nApplication under test will be provided to the participants, will start with the installations and setup\nPut your first step -> use Selenium IDE and record/playback your test\nGet introduced to the Webdriver API (Selenium Python bindings)\nStart writing test scripts\nLearn how to generate test reports using HTMLTestRunner.py\nBrief on Lettuce and some of the best practices to follow\n\nREQUIREMENTS\n\nPreferred OS: Linux based (Fedora preferred) \nBrowser: Firefox\n\nSPEAKER BIO\n\nAnisha works at Red Hat, Pune and has been handling most of the QA responsibilities in her teamfor nearly 2 years now. She writes test automation scripts, mostly for web UI. Worked with Selenium(with Python), Cucumber + Watir-webdriver and explored a couple of other tools. She enjoys testing at work and is keen on attending events/conferences happening in and around the city. \n\nBlog: http://goo.gl/XeSa41\n\nSLIDES\n\n\nhttp://pyseleniumworkshop-anarang.rhcloud.com/#/\n\n\nLINKS\n\n"Let\'s talk testing with Selenium" at PyCon India 2013: http://goo.gl/ufrnjG\n"Biting into Cucumber + Watir" at TechJam, Pune 2014: http://goo.gl/9psjNC\nFunnel Page: http://in.pycon.org/funnel/2014/184-test-your-web-app-with-selenium\n', 'end': {'dateTime': '2014-09-26T19:00:00+05:30'}, 'location': 'Audi 2', 'summary': 'Test your web app with Selenium by Anisha Narang'}, {'start': {'dateTime': '2014-09-26T16:00:00+05:30'}, 'description': "Speaker:praveen patil\nSection:Workshops\nTechnical level:Beginner\n\nOBJECTIVE\n\nAn understanding of science and technology is necessary in every students life. The main challenge in the field of  science Education at a global level is the declining interest of students into science. Unfortunately the performance of a student is often measured by the ability to memorize than the real understanding. as a result most of them fail to apply what they learn in the classroom to the things they encounter in real life. Students also lose interest because of absence of appropriate motivation and also due to the of lack of equipment.  \n\nThe key to combating this  is the adoption of an inquiry-based, 'learn-by-doing' approach i.e. learning by exploring and experimenting. However, almost everywhere science is mostly taught from the textbooks without giving importance to experiments, partly due to lack of equipment. ExpEYES (Experiments for Young Engineers and Scientists)  is the most affordable solution to this problem. ExpEYES brings the ability to perform experiments with reasonable accuracy, opens up an entirely new path for learning science.\n\nDESCRIPTION\n\nWith the objectives of developing  affordable laboratory equipment and training science teachers, ExpEYES is from the PHOENIX project of Inter-University Accelerator Centre, New Delhi.  It is an Open Hardware and Free Software framework for developing science experiments, classroom demonstrations and projects without getting in to the details of electronics or computer programming. It converts your PC into a portable science laboratory.  \n\nExpEYES can be used to perform a large number of experiments. For example, the device can be used to study electromagnetic induction, interference of sound waves, Lissajous Figures, to measure gravity by time of flight, alongside many other applications. Concepts like Lissajous Figures and Electromagnetic induction are quite  difficult for most students. ExpEYES allows the study of fast changing phenomena and is an effective tool for exploring electromagnetic phenomena  and  the laws of electromagnetic inductionnamely, Faradays law and Lenzs law. The ability to capture real-time graphs offers the important benit for students to better visualize the associated phenomena and develop a deeper understanding of it.  \n\nIn this presentation we will be demonstrating and discussing how ExpEYES can be used to explore and study various phenomena like Interference of Sound, Lissajous Figures and  Electromagnetic Induction in different situations: a magnet oscillating in a coil, magnet falling through a coil, a ferromagnetic material and a magnet swinging over a coil.  \n\nREQUIREMENTS\n\nProjector, Power terminals\n\nSPEAKER BIO\n\nPraveen Patil\nA Physics Teacher and free software enthusiast.  \n\nM.Sc. in Physics from Karnatak University Dharwad, India. Currently pursuing PhD from Visvesvaraya Technological University, Belgaum.  \n\nProfession: Working as a  Lecturer in Physics since last 12 years at Govindram Seksaria Science College Belgaum, India.  \n\nInvolvement in Free Software :\nUsing Free Software and ExpEYES for classroom and laboratory  demonstrations for 11th and 12 grade.\nMaintaining a blog for ExpEYES.\nInvolved in FOSS training programs for science teachers.\nWorking  e-content developer for National Repository of Open Educational Resources (NROER) for School Education by Central Institute of Education Technology (CIET), NCERT, New Delhi.  \n\nWorked  as a member of committee for Development of ICT Refresher Course forstudents and teachers @ CIET-NCERT, New Delhi.Developed Three Refresher courses ExpEYES: An open Source Science Lab, STEP : Physics Simulation Environment & IWICT -Interacting with ICT tools.  \n\nExpEYES Workshops/Training programs conducted :  \n\n   Carmel College, Nuvem, Goa.\n   Jansons Institute of Technology, Coimbatore, Tamilnadu.\n   G S S College, Belgaum, Karnataka and several other schools and colleges.\n   Resource person for UGC Sponsored State Level Workshop on Experiments for Young Engineers andScientistsExpEYES on November 15 - 16, 2013 Organized byDepartment of Physics & Electronics P.V.K.N. Govt. Degree College, Chittoor, Andhra Pradesh.\n\nTalks at International Event\n   Invited Speaker @ FOSSASIA - 2014 hosted at Norton University in Phnom Penh City, Cambodia on February 28 - March 2, 2014. ( Delivered a Talk and conducted workshop)\n\nConference at RMLL-2014 at Montpellier, France https://2014.rmll.info/conference88 \n\nLINKS\n\nhttp://expeyes.in\nhttp://expeyes.wordpress.com\nFunnel Page: http://in.pycon.org/funnel/2014/120-expeyes-python-powered-open-source-portable-science-lab\n", 'end': {'dateTime': '2014-09-26T19:00:00+05:30'}, 'location': 'Audi 3', 'summary': 'ExpEYES : Python Powered Open Source Portable Science Lab by praveen patil'}, {'start': {'dateTime': '2014-09-27T08:00:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-27T09:15:00+05:30'}, 'location': '', 'summary': 'Breakfast & Registrations'}, {'start': {'dateTime': '2014-09-27T09:15:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-27T09:30:00+05:30'}, 'location': '', 'summary': 'Kenneth Award'}, {'start': {'dateTime': '2014-09-27T09:30:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-27T10:15:00+05:30'}, 'location': 'Audi 1', 'summary': 'Keynote 1 by Kushal Das'}, {'start': {'dateTime': '2014-09-27T10:15:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-27T10:45:00+05:30'}, 'location': '', 'summary': 'Tea Break'}, {'start': {'dateTime': '2014-09-27T10:45:00+05:30'}, 'description': "Speaker:Ankush Sharma\nSection:Core Python\nTechnical level:Beginner\n\nOBJECTIVE\n\nA talk to give you insight into how real life computer applications can be easily interfaced by using the power of image processing with Python.I will be showing how you can play games,control your computer and do other cool stuff without using any other hardware,just your gestures alone.\n\nDESCRIPTION\n\nWe are a group of three people from IIT-BHU, Varanasi  whom i will be speaking.I will be showing you the building process of two computer applications we have made for this presentation talk:  \n\nTouch-Free Flappy Bird - Almost all of you have known about the addictive Flappy game in android. I will be showing how to interface this game to let you control the bird by your fingers itself. I will be first showing how to build the game by using Pygame and then how to interface it by using SimpleCV.  \n\nVirtual User - Through this, I will be showing how to perform clicks,scrolls,mouse movements on your pc without using any hardware; just by your fingers alone.  \n\nThe aim of the talk is to present a model which has endless applications in real life; like automated CCTv surveillance, self-capable projectors(no need of having laptop with projector for working) and much more.\nThe motto of the talk is:    Python can make comfort in human life!!  \n\nPROJECT-AUTHORS :\n1. Ankush Sharma\n2. Shivam Verma\n3. Abhishek Yadav  \n\nREQUIREMENTS\n\nBasic understanding of Python and it's libraries.  \n\nHere are quick download links:  \n\nSPEAKER BIO\n\nI, Ankush Sharma is an undergraduate from IIT BHU Varanasi with 1.5+ years experience  with Python.I have given multiple presentations on this technology in my college.Really looking forward to give one here.  \n\nSLIDES\n\n\nhttps://drive.google.com/file/d/0B_aMAnqOOFmJNDVfWFFKUmlnOVE/edit?usp=sharing\n\n\nLINKS\n\nVirtual-User :  https://github.com/black-perl/Virtual-User\nVideo: \n https://www.youtube.com/watch?v=Fc3KyU1DVf0&feature=youtu.be\nTouch-free-flappy-bird-game : https://github.com/black-perl/Touch-free-flappy-bird-game\nVideo : \n https://www.youtube.com/watch?v=1g2kJx1qmyE\nFunnel Page: http://in.pycon.org/funnel/2014/208-python-the-eyes-of-real-world-computer-applications\n", 'end': {'dateTime': '2014-09-27T11:30:00+05:30'}, 'location': 'Audi 1', 'summary': 'Python, the eyes of real world computer applications by Ankush Sharma'}, {'start': {'dateTime': '2014-09-27T10:45:00+05:30'}, 'description': 'Speaker:Jyotiska NK\nSection:Infrastructure\nTechnical level:Intermediate\n\nOBJECTIVE\n\nTo give an overview and discussion on Apache Spark, a fast cluster computing framework for large-scale data processing. Also discuss use cases and demonstrate the advantages of Spark over Hadoop using programs written with PySpark API for analyzing large datasets.\n\nDESCRIPTION\n\nApache Spark is an in-memory cluster computing framework, originally developed in UC Berkeley. Spark runs either standalone, Amazon EC2 or on Apache Mesos(a cluster manager). Thats why, Spark can co-locate with Hadoop and can be deployed in a Hadoop cluster. Also, along with local data, Spark can be used to process data stored in HDFS, HBase, Hive, Cassandra. Spark is designed to perform both general data processing (similar to MapReduce) and new workloads like streaming, interactive queries, and machine learning.  \n\nResults have shown that Spark can be 10 times to upto 100 times faster than Hadoop on datasets scaling up to Terabytes. Currently, it supports Scala, Java and Python for writing programs.  \n\nIn this talk, I will be explaining the following concepts on Spark - General Overview, RDD (Resilient Distributed Datasets) which is a read-only, partitioned collection of records through which Spark achieves memory abstraction, fault tolerance and fast in-memory computation, followed by Job Scheduling and Memory Management.  \n\nI will give a demonstration of PySpark, the Python API built on Spark, show different operations (map, reduce, sort, filter) on a large dataset. Then I plan to do a head-to-head comparison between two programs doing same work - one written in mrjob for Hadoop and the other written using PySpark.  \n\nI will conclude the presentation talking about the companies currently using Spark worldwide and their use cases.\n\nREQUIREMENTS\n\nIf you would like to try out example programs along with the demo, you will need:  \n\nModerately powerful laptop (at least 4GB of RAM)  \n\nLinux Machine  \n\nPython 2.7  \n\nPre-compiled local Spark installation (follow http://spark.incubator.apache.org/docs/latest/quick-start.html)  \n\nI will share the datasets to be used with the slide.\n\nSPEAKER BIO\n\nI work as a Data Engineer at DataWeave, a Big Data startup based in Bangalore in retail and e-commerce domain. I finished my Masters Data Science from IIIT-Bangalore this year.  \n\nI am a committer at Apache Spark project. My main contributions are towards PySpark and improving the performance of Python API  along with building programming guides and documentations for PySpark to encourage Python programmers to use Spark.\n\nLINKS\n\nhttps://github.com/jyotiska\nhttp://jyotiska.github.io\nhttp://in.linkedin.com/in/jyotiskank/\nhttp://spark-project.org/\nhttps://github.com/apache/spark\nFunnel Page: http://in.pycon.org/funnel/2014/108-python-spark-lightning-fast-cluster-computing\n', 'end': {'dateTime': '2014-09-27T11:30:00+05:30'}, 'location': 'Audi 2', 'summary': 'Python + Spark: Lightning Fast Cluster Computing by Jyotiska NK'}, {'start': {'dateTime': '2014-09-27T11:30:00+05:30'}, 'description': "Speaker:Arun Ravindran\nSection:Web Development\nTechnical level:Intermediate\n\nOBJECTIVE\n\nTo explain the various design patterns that Django programmers use and prevent reinventing the wheel in each of your projects. Takeaways of this talk would be to know the answers to:  \n\nDESCRIPTION\n\nDesign Patterns are patterns we see and code in almost every Django projects. They are scenarios for which we wished had a canonical and elegant solution.  \n\nBased on the seminal work on design patterns in the Gang of Four book and Martin Fowler's book, the talk takes you through several well known design patterns to improve your Django code. It might also cover several new patterns in web application development that you can apply to other frameworks.  \n\nWill talk about some real design challenges we faced when an application evolves such as refactoring legacy code and APIs. Will also talk about the criticisms of the framework itself.\n\nREQUIREMENTS\n\nMust have completed some introductory tutorial on Django. Intermediate to advanced Django programmers would greatly benefit from this talk.\n\nSPEAKER BIO\n\nI have been tinkering with Django since 2007 for several projects ranging from simple intranet applications to social networks. I have given numerous talks and tutorials on Django at several forums. My Django articles and screencasts have been spotted on the front pages of Hacker News, Reddit etc and have been well received by the open source community.\n\nLINKS\n\nMy website http://arunrocks.com contains several articles and tutorials on Python and Django.\nMy last year's Pycon talk is here (along with links to my other talks): \nhttp://in.pycon.org/funnel/2013/59-django-beyond-basics\nhttps://www.youtube.com/watch?v=_PBvld1CuGU\nFunnel Page: http://in.pycon.org/funnel/2014/227-django-design-patterns\n", 'end': {'dateTime': '2014-09-27T12:15:00+05:30'}, 'location': 'Audi 1', 'summary': 'Django Design Patterns by Arun Ravindran'}, {'start': {'dateTime': '2014-09-27T11:30:00+05:30'}, 'description': 'Speaker:Chetan Giridhar\nSection:Core Python\nTechnical level:Intermediate\n\nOBJECTIVE\n\nSpeakers: Chetan Giridhar & Vishal Kanaujia\n\nPython multi-threading implementation has always been under a scanner, thanks to the infamous GIL. Because Python applications with multi-threading result in performance hit (especially on multi-cores), asynchronous programming might help.  \n\nDESCRIPTION\n\nREQUIREMENTS\n\nPython basics, some understanding of threads/processes. Prior experience in other languages suitabel\n\nSPEAKER BIO\n\nChetan Giridhar is a Python developer and open source enthusiast. He works as a Lead Engineer & Evangelist at BlueJeans Network and is an associate editor at The Python Papers. He has delivered talks and written articles on Python in magazines.  \n\nTalks\n1. FUSEing Python for rapid development of storage efficient file system, PyCon APAC, June 2012\n2. Rapid development of website search in Python, PyCon India, September 2012\n3.Python threads: Dive into GIL!, PyCon India, Sept 2011  \n\n=========================\n\nVishal Kanaujia is a Python developer and technology enthusiast. He has delivered talks and written articles on Python. He has been a speaker at Pycon New Zealand, PyCon APAC, PyCon India and SciPy India.  \n\nHe has interest in fields including Python internals, storage systems, Filesystems, and search technologies, and application performance optimization.  \n\nOpen source projects\nseFS (https://github.com/cjgiridhar/seFS) pyrebootops (https://github.com/cjgiridhar/pyrebootops/)  \n\nTalks\n- Dissecting memory mysteries of Python, PyCon New Zealand, India 2013 - FUSEing Python for rapid development of storage efficient file system, PyCon APAC, 2012, Singapore - Rapid development of website search in Python, PyCon India, 2012\n\nWebsite\n- http://freethreads.wordpress.com/\n\nLINKS\n\nfsMgr - FileSystem Search Manager - Tornado and Whoosh (https://github.com/cjgiridhar/fsMgr)\nseFS - Storage Efficient file system - Python fuse (https://github.com/cjgiridhar/seFS)\nFunnel Page: http://in.pycon.org/funnel/2014/230-async-programming-and-python\n', 'end': {'dateTime': '2014-09-27T12:15:00+05:30'}, 'location': 'Audi 2', 'summary': 'Async Programming and Python by Chetan Giridhar & Vishal Kanaujia'}, {'start': {'dateTime': '2014-09-27T12:15:00+05:30'}, 'description': "Speaker:Anand Chitipothu\nSection:Software Development Tools\nTechnical level:Beginner\n\nOBJECTIVE\n\nDuring this election season, I've spent lot of time scrapping government data, parsing PDFs to extract lot of useful data that was not available anywhere else. I've used Python extensively in this process.  \n\nThis talk is about my learnings during the process and tips of others who are about to take similar adventures.\n\nDESCRIPTION\n\nDuring this election season, I volunteered to provide technical assistance to couple of election campaigns. During this process, I found that lot of crucial information is very hard to find. To give you an idea, here are some of them:  \n\nall assembly constituencies in a parliamentary constituency\nall wards in an assembly constituency\nall polling booths in an assembly constituency\nnumber of polling centers \n\nI've also built couple of tools using this data to help the campaign.  \n\nApart from these, close to the elections I had to build  a website to find polling booth from voterid, knowing that election commission website is not going to work when need. Again this information is available only in the PDFs and had to be extracted using Python.  \n\nAnd there were some people keen to use voterlists on paper. So I wrote some python scripts to sort voters of a polling center by name/house-no etc. and generate PDFs in very compact form so that they take very less number of papers. Imagine printing voterlists for all people in Bangalore. I'm sure I would have saved paper equivalent to a dozen trees.  \n\nI've used reportlab for generating PDFs and got hit by a performance issue in reportlab. It was just a day before elections and I had to finish the task. With no options left, I took couple of servers on the cloud and ran thing in parallel. I found a work-around only after burning my hands.  \n\nThere were lot more adventures. Come and listen to me if you interested!  \n\nSPEAKER BIO\n\nAnand Chitipothu is a software consultant and trainer. He offers corporate trainings on Python and conducts public courses on Python programming in Bangalore.\n\nHe is an active member of Indian Python community, coordinator of PyCon India 2012, organized PythonMonth in 2013 and elected member of PSF.  \n\nHe is co-author of web.py, a micro web framework in Python and currently works for Internet Archive.  \n\nLINKS\n\nhttp://anandology.com/\nFunnel Page: http://in.pycon.org/funnel/2014/207-messing-with-government-data-using-python\n", 'end': {'dateTime': '2014-09-27T13:00:00+05:30'}, 'location': 'Audi 1', 'summary': 'Messing with government data using Python by Anand Chitipothu'}, {'start': {'dateTime': '2014-09-27T12:15:00+05:30'}, 'description': 'Speaker:Sandeep Raju\nSection:Infrastructure\nTechnical level:Intermediate\n\nOBJECTIVE\n\nThe audience will get to learn about an API queueing system we built at Plivo. This talk sheds light on the existing queues available and why we chose to build SHARQ instead of using the existing ones.\n\nDESCRIPTION\n\nThe talk will cover the following sections in detail.  \n\nPlivo often sees a spike in traffic patterns from some customers (for example when some customers decide to run a large Call or SMS campaign). These spikes tend to overload our systems because  the automatic scaling cannot be fast enough for such work loads. Under such a scenario, some customers start affecting API requests from other customers, thus bringing down the overall service quality. We do not want to have our customers take the trouble to rate limit at their end.  Thus, to ensure service quality, we need a system to queue API requests and process them at a controlled rate.  \n\nThis section talks about how we evaluated Celery, and other queues. Why these did not fit into our requirements and why we chose to write it from ground up.  \n\nThis section gives an overview of the implementation of SHARQ, how to use it and  a live demo. Well start by discussing the architecture we chose for SHARQ and the tools we chose to build it. Then, Ill discuss the rate limiting algorithm and the redis data structures we have used. At the end, Ill demo how SHARQ works.  \n\nThis section will cover some of the benchmarks of SHARQ and its analysis, some metrics from our deployment of SHARQ in production. Well also discuss when to use SHARQ and some ideas on how to make it scalable and highly available.  \n\nDiscussion with the audience and answering any questions.  \n\nSPEAKER BIO\n\nI work as a Product Engineer at Plivo. I am the primary author of SHARQ. Python has been my primary programming language from the past 4+ years. I am an ardent follower of Free & Open Source software and love to hack on it in my free time. I am one the founding members and admin of the PES Open Source Community. As a part of this community, I have conducted sessions on various open source softwares and have mentored some projects.  \n\nHere are my social profiles,  \n\nhttps://github.com/sandeepraju\nhttps://twitter.com/sandeeprajup\n\nMy personal website,  \n\nhttp://sandeepraju.in\n\nLINKS\n\nSharQ Server: https://github.com/plivo/sharq-server\nSharQ (Core Library that powers SharQ Server): https://github.com/plivo/sharq\nFunnel Page: http://in.pycon.org/funnel/2014/245-sharq-an-api-queueing-system-built-at-plivo\n', 'end': {'dateTime': '2014-09-27T13:00:00+05:30'}, 'location': 'Audi 2', 'summary': 'SHARQ - An API queueing system built at Plivo! by Sandeep Raju'}, {'start': {'dateTime': '2014-09-27T13:00:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-27T14:00:00+05:30'}, 'location': '', 'summary': 'Lunch'}, {'start': {'dateTime': '2014-09-27T14:00:00+05:30'}, 'description': "Speaker:Rahul De\nSection:Core Python\nTechnical level:Intermediate\n\nOBJECTIVE\n\nGet to know about Medusa: a new innovative Python implementation harnessing Google's super fast Dart Virtual Machine running Python at near native speeds.\n\nDESCRIPTION\n\nThe session will formally unveil the Medusa project.  \n\nPython being an interpreted language has its pros and cons and at this PyCon we are going fix one of the most obvious cons of Python: its execution speed.\nWe all love Python for its simplicity and flexibility but when it comes to writing large volumes of code involving complex operations and recursions Python somewhat falls short compared to the other native/JIT languages.  \n\nIn late 2012, Google came up with Dart, a language aiming for the unification of server and client side web development and scalable apps. Along with it came The Dart Virtual Machine. A hyper fast VM which builds upon the V8 js engine and even outperforms it. We decided why not let Python have a go on this?  \n\nThe main aim behind creating the Medusa project is giving a typless and flexible language like Python a faster execution environment while still maintaining all its flexibility which we all love. Numerous projects such as the ShedSkin project which converts implicitly typed Python to C++ have tried doing it, but have put some or the other restriction on the input Python code. The Medusa project aims at running pre-existing Python code without any or minimal modification at a much faster rates compared to the usual implementations.  \n\nStill in its nascent stages and implemented using Qt/C++, Python and Dart, the project works by compiling Python code to a highly optimized Dart code in real time, persistently caching it and letting it rip on the Dart VM. The Dart VM like V8 compiles the dart code directly to machine code and using its vast array of runtime optimizations runs at a much higher speed compared to the CPython implementation and at times upto a 1000 - 1500% faster while maintaining all the features Python offers. Apart from this Python is further enriched with extra features provided by the Dart VM and you can do more stuff with Python which isn't possible with the vanilla Python.\n\nREQUIREMENTS\n\nFamiliarity with Python, C++, Dart(an added bonus) and Programming Language Translation.\n\nSPEAKER BIO\n\nI am a 22 year old recent VIT University graduate working for MartMobi Technologies as the back end and infrastructure engineer. I love systems programming and am really passionate about core systems and programming. My areas of interest are compilers, virtual machines, server programming and game development. I have done quite a few notable projects including a DMBS engine written from scratch and a whole new Symmetric Stream Cipher. I love exploring new creative and unorthodox possibilities and believe in the art rather than the science of computer programming.\n\nSLIDES\n\n\nhttps://docs.google.com/presentation/d/1ClsPDKYtCTZGsSOAwYm4N8pGQ_lx-8GzMX21mZ9vikE/pub?start=false&loop=false&delayms=5000\n\n\nLINKS\n\nhttps://github.com/rahul080327/medusa\nhttps://www.dartlang.org\nFunnel Page: http://in.pycon.org/funnel/2014/130-medusa-a-much-faster-python-implementation-based-on-the-dart-virtual-machine\n", 'end': {'dateTime': '2014-09-27T14:45:00+05:30'}, 'location': 'Audi 1', 'summary': 'Medusa: A much faster Python implementation based on the Dart Virtual Machine by Rahul De'}, {'start': {'dateTime': '2014-09-27T14:00:00+05:30'}, 'description': "Speaker:Kiran Jonnalagadda\nSection:Web Development\nTechnical level:Intermediate\n\nOBJECTIVE\n\nUnderstanding the challenges with auth as a service, using the Lastuser service\n\nDESCRIPTION\n\nAt Pycon India 2011, I presented Lastuser, which provides authentication as a service, aggregating multiple social profiles into a single application-facing profile. Lastuser has since been adopted by PyCon India for its own proposal submission process.  \n\nIt's been three years since, so I'd like to revisit how Lastuser has developed since then and what I've learnt about authentication and building such apps using Python.\n\nSPEAKER BIO\n\nKiran Jonnalagadda created Lastuser alongside a bunch of other nifty and not-so-nifty things.\n\nLINKS\n\nhttps://github.com/hasgeek/lastuser\nhttps://auth.hasgeek.com/\nFunnel Page: http://in.pycon.org/funnel/2014/255-auth-as-a-service-with-lastuser\n", 'end': {'dateTime': '2014-09-27T14:45:00+05:30'}, 'location': 'Audi 2', 'summary': 'Auth as a service with Lastuser by Kiran Jonnalagadda'}, {'start': {'dateTime': '2014-09-27T14:45:00+05:30'}, 'description': 'Speaker:Utkarsh Sinha\nSection:Core Python\nTechnical level:Beginner\n\nOBJECTIVE\n\nAttendees will get to learn how a real world movie making problem was solved using Python, the technologies behind it and the challenges we faced building it.\n\nDESCRIPTION\n\nMaking an animated movie involves a lot of data. Moving this data between the 3 studios of DreamWorks (Los Angeles, San Francisco and Bangalore) requires a dedicated and robust pipeline.  \n\nCurrently deployed on all movies that DreamWorks is making, Transfer Pipeline is a product of the Bangalore Studio and has revolutionized the way DreamWorks makes movies.  \n\nAUDIENCE\n\nDevelopers interested in knowing how Python is solving a very real problem for movie making.  \n\nDETAILED ABSTRACT\n\nMovie making is a team game. It doesnt help when half of your team is on the other side of the world. Bridging the gap between creative people is an entirely technical challenge.  \n\nMovie making data can be roughly categorized into 2. Source data (like models, maps, curves) and output data (images, movies etc). At any moment of time, artists expect all of these to be available locally for interactive work or playback.  \n\nMoving these heavy data wasnt much of a problem when DreamWorks had just 2 studios (in Los Angeles and San Francisco) thanks to a low-latency network.  \n\nWhen DreamWorks started the Bangalore studio, the distance forced us to come up with a comprehensive solution that would layer on top of the existing pipeline but still allowing the artists and creative heads the expressiveness and interactivity they are used to between Los Angeles and San Francisco.  \n\nThe dynamic nature of python helped us rapidly prototype and deploy early versions of the tool while the movie was still getting made.  \n\nBatteries included nature of Python ensured that people who are developing the service, often having production responsibilities, spent time only on design and architecture and less on coding/programming.  \n\nOUTLINE\n\nWhy we need a file mover\nDesign\nThe code base\nTechnologies used\nFuture challenges\nQuestions?\n\nDuration:: 1 hour\n\nSPEAKER BIO\n\nJeffrey Jose has been working with DreamWorks Animation for almost 6 years now. He was part of the original dev team and has contributed extensively to the project. He continues to contribute to it even now.\n\nUtkarsh Sinha has been working with DreamWorks Animation for almost 3 years now. He has been actively adding features and upgrading functinonality to meet challenges posed by upcoming movies.\nFunnel Page: http://in.pycon.org/funnel/2014/224-transfer-pipeline-at-dreamworks\n', 'end': {'dateTime': '2014-09-27T15:30:00+05:30'}, 'location': 'Audi 1', 'summary': 'Transfer Pipeline at DreamWorks by Utkarsh Sinha'}, {'start': {'dateTime': '2014-09-27T14:45:00+05:30'}, 'description': "Speaker:Dhananjay Sathe\nSection:Web Development\nTechnical level:Beginner\n\nOBJECTIVE\n\nGet to know ElasticSearch - How we leverage it's awesomesauce in our massive infrastructure. It's 'QuickSliver' quick, level 'Xavier' smart and grows faster than 'Hulk'.  Learn how to use our favorite language to get down and dirty quick and leave procrastination and worrying to the past.\n\nDESCRIPTION\n\nElasticSearch is the new (sort-of) NoSQL kid on the block. Think, WikiPedia, FourSquare, Github. It comes with a set of very impressive features and exposes nifty constructs, that would entail growing a beard to compete with RMS in the SQL world.  \n\nBest of all , it's quick to deploy comes set with 'Marvel' overlord and whispers over REST.  \n\nDealing with thousands of nodes,millions of events. We use it at a number of places. Some innovative features have surfaced in the recent releases of elasticsearch 1.x that make tasks over these huge data-sets a breeze.  \n\nThe principle goal of this talk is to share some of this awesome candy with all you folks and get a whirlwind tour of the dead basics and introduce you to the nastily exciting bits and snippets that will have you wishing you had known better earlier.For the slightly more inquisitive readers - We'll talk  schemas,deploys, mappings, percolators, aggregations, server-side execution and extensions and of-course lessons learnt+takeaways.  \n\nThe latest , finally official python libs make all this dead simple and quick to use. Combine nifty little scripts and our old friends like MatPlotlib to get intelligent insights into a buttload of seemingly random data. Or build a quick Code-Search, Context search, Discover the beauty called Kibana.  \n\nIn the pattern for this talk I hope to break away from the usual delivery.Keep it fresh, interesting and give you something concrete to use and think about at the end of the time you spent sitting though the session.  \n\nREQUIREMENTS\n\nEnthusiasm and Python Basics\n\nSPEAKER BIO\n\nAt Directi, I design and build intelligent and slick software suite among other tools that enables us to keep tabs on all the little and large demons hidden in our huge distributed infrastructure and submit them into  control.  \n\nI have been  a long time Python Developer and been hacking in it for the better part of the decade. I contributed to a number of OpenSoure projects the notable ones being Samba, Gnome and The RoboEarth Cloud Engine of which I happened to be one of the core developers.  \n\nI have been speaking at a bunch of events and conferences such as Pycon, ROSCON and Google IOx.  \n\nI have spoken at Pycon 12 on GObject Introspection and Python and again at Pycon 13 presenting one of the most popular talks titled ' We're Building Skynet and it Loves Python!'  \n\nWhen free you will find me skiing, climbing, travelling around the world like an aimless vagabond. Usually doing something offbeat or simply sampling the local brew.\n\nSLIDES\n\n\nhttp://goo.gl/ZXDNi7\n\n\nLINKS\n\nPycon 13 - We're Building Skynet and it Loves Python!\nhttps://www.youtube.com/watch?v=U98EN8owp4M\nFunnel Page: http://in.pycon.org/funnel/2014/253-meet-elasticsearch-my-pet-crunch-monster-directi\n", 'end': {'dateTime': '2014-09-27T15:30:00+05:30'}, 'location': 'Audi 2', 'summary': 'Meet ElasticSearch - My Pet Crunch Monster @Directi by Dhananjay Sathe'}, {'start': {'dateTime': '2014-09-27T15:30:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-27T16:00:00+05:30'}, 'location': '', 'summary': 'Tea Break'}, {'start': {'dateTime': '2014-09-27T16:00:00+05:30'}, 'description': 'Speaker:Gurajapu Raja Sumant\nSection:Embedded Python\nTechnical level:Intermediate\n\nOBJECTIVE\n\nThe talk will focus on the emergence of GPU computing and how python can help us in taking the first steps towards it.\n The audience will witness the full power of CUDA/OpenCL technology and how python can truly bring super computing to the masses.\n\nDESCRIPTION\n\nOutline of the talk:\n\n++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n1)The talk is split into two sections; background (7-10 min) and code examples(25 min).  \n\n2) the rest of time will be utilized for Q&A and interaction with audience  \n\n3) We will demonstrate the code examples in real-time  \n\n4)The emphasis will be on the application of Cuda/CL rather than it inner workings.  \n\n5)We do not wish to bore the audience so the examples will unique,concise,clear and most importantly original . github repo will be available soon  \n\nExamples will cover\n\nvector addition \nThe simplest Cuda/Cl program as a basis for understanding parallel programming, threads , blocks etc.  \n\nMonte Carlo Method \nA really insightfull application of parallel processing\nwe brute force the value of pi here  \n\nFIR filter\nbeautiful and extremely fast filter approach  \n\nMandelbrot\nBenchmark for  code speedup  \n\nImage processing with lena and Cuda\n\nThese examples were carefully chosen to illustrate some of the key\nfeatures of CUDA/CL and also serve as a tutorial.  \n\ngithub repo:\nhttps://github.com/ashwinashok9111993/andromeda\n\n+++++++++++++++++++++++++++++++++++++++++++++++++++++\n\nPlease also see the slides in the \'Slides\' section\nWe also have some pre-reading stuff in the links section(not that necessary for the talk. Only if you are feeling adventurous :) )  \n\n+++++++++++++++++++++++++++++++++++++++++++++++++++++\n\nIf one is to realize the high performance computing "mantra" , i.e.\nconcurrency and parallelism one has to look no further than GPUs .\nTo over come the bottlenecks the CPUs are imposing by serial mode of computation,we embrace the fully parallel nature of the GPU.\nGranted the GPUs were initially targetted towards graphics, we have witnessed a paradigm shift towards the inclusion of GPUs in\nnumerical and scientific computing . To this end , the speakers strive to potray python as a bridge between conventional computation\nand this new ground breaking field of GPU computing .  \n\nWe intend to acheive this by introducing our audience to technologies like PyCuda ,PyOpenCl and their numerous wrapper libraries.\n+++++++++++++++++++++++++++++++++++++++++++++++++++++\n\nWe aim to familiarize the audience with predominantly PyCuda as it is the most mature GPU (NVIDIA) computing library till date as\nit puts the entire power(read cores and threads!) at our disposal.\nAlso the abundance of great documentation and comprehensive code\nexamples make it the right candidate to lay emphasis on .  \n\nREQUIREMENTS\n\nThe audience are not expected to bring their laptops ,but if they do want to execute some quick code snippets, it is recommended they\nbring along the following :  \n\n1) A computer with NVIDIA GPU supporting CUDA or an AMD GPU supporting OpenCl (even 3rd generation i3/i5/i7 have experimental support for their IGP`s )  \n\n2)Softwares:  \n\npython2.7\n\ncuda toolkit, pycuda , numpy ,scipy\n\nAny OS will do(win7,linux3.4+,MacOSX)\n\nIf anyone has trouble installing the required toolkits to work, please leave the discription of the problem in the comment and we will be\nwilling to sort out your problem.\n\nSPEAKER BIO\n\nThere are two speakers dealing with the topic.\n\nG.Raja Sumant is a TCS employee who happens to be an undergraduate in the field of Electronics and Communications Engineering who has 3 years of experiance in conducting various \npython and embedded related workshops in conjunction with the IEEE Hyderabad Section. He has won the innovative project showcase at the IEEE\nPES AISC 2013 for Smart Grid technology application for household devices using MSP430 microcontroller. He has good programming skills in\ndifferent python modules such as NumPy,Scipy,MatPlotLib and other signal processing libraries of Python. He has also good expertise in\nembedded Python and embedded C ,thanks to his projects on BeagleBoard,ARM,MSP430,Atmel,RL78 and RaspberryPi.  \n\nHe has completed a short term course in embedded system design from C-DAC(CENTER FOR DEVELOPMENT OF ADVANCED COMPUTING) an initiative of DIEIT(DEPARTMENT OF ELECTRONICS AND INFORMATION TECHNOLOGY).  \n\nYou can find the speakers linkedIn profile in the links section  \n\nAshok Ashwin is currently pursuing Bachelors degree in Electronics and Communications Engineering. He spents most of his spare time working on embedded \nprojects and Python happens to be a subject of great interest to him. He is actively involved  in propagating the use of python as a viable\nalternative to numerical computational packages like MATLAB.He is currently the vice president of the IEEE student branch in his college and many\nworkshops regarding Python were conducted under his leadership.His most noteworthy achivement till date is his project in creating an  oscillosope using\npython and MSP430 microcontroller. His expertise also extends to GUI programming with Qt and scientific computing using NumPy and SciPy . His current interests\ninclude image processing using GPU computing and efficient digital filter synthesis using microcontrollers.\nYou can find his code in the github links and youtube channel given below in the links section.  \n\nSLIDES\n\n\nhttps://docs.google.com/presentation/d/1ALkPN61_yYaqit9-B8J2zC2UEF7q8tPsi_TMcRLITJw/edit?usp=sharing\n\n\nLINKS\n\nG.Raja Sumant \n http://in.linkedin.com/pub/gurajapu-sumant/57/867/919/\nAshok Ashwin\n http://www.linkedin.com/pub/ashwin-ashok/54/183/b5b\ncuda\nhttp://www.nvidia.in/object/cuda_home_new.html\nhttps://developer.nvidia.com/cuda-toolkit\nprereading:\nhttp://documen.tician.de/pycuda/tutorial.html \nFunnel Page: http://in.pycon.org/funnel/2014/158-gpu-accelerated-high-performance-computing-primer\n', 'end': {'dateTime': '2014-09-27T16:45:00+05:30'}, 'location': 'Audi 1', 'summary': 'GPU accelerated high performance computing primer by Gurajapu Raja Sumant'}, {'start': {'dateTime': '2014-09-27T16:00:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-27T16:45:00+05:30'}, 'location': 'Audi 2', 'summary': 'Movie Screening - "The Internet\'s Own Boy: The Story of Aaron Swartz"'}, {'start': {'dateTime': '2014-09-27T16:45:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-27T17:30:00+05:30'}, 'location': 'Audi 1', 'summary': 'Lightning Talks'}, {'start': {'dateTime': '2014-09-27T16:45:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-27T17:30:00+05:30'}, 'location': 'Audi 2', 'summary': 'Movie Screening - "The Internet\'s Own Boy: The Story of Aaron Swartz"'}, {'start': {'dateTime': '2014-09-28T08:00:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-28T09:15:00+05:30'}, 'location': '', 'summary': 'Breakfast & Registrations'}, {'start': {'dateTime': '2014-09-28T09:30:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-28T10:15:00+05:30'}, 'location': 'Audi 1', 'summary': 'Keynote 2 by Michael Foord'}, {'start': {'dateTime': '2014-09-28T10:15:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-28T10:45:00+05:30'}, 'location': '', 'summary': 'Tea Break'}, {'start': {'dateTime': '2014-09-28T10:45:00+05:30'}, 'description': 'Speaker:Vajrasky Kok\nSection:Core Python\nTechnical level:Intermediate\n\nOBJECTIVE\n\nExplain asyncio to Python programmers who are new to asyncio. After attending this session, people will acquire the correct mindset of writing asynchronous code with asyncio and be able to use it for basic cases. People will understand the main difference between asyncio way and threading way in solving multiple I/O requests problem.\n\nDESCRIPTION\n\nIntroduction of the speaker. The kind of problems that asyncio is designed to solve. (5 min)\n\nThe problem: I/O is slow and we need to handle multiple I/O requests efficiently.  \n\nThe model of asyncio way, sequential way, and threaded way. (5 min)\n\nThe main difference between them in solving multiple I/O requests (downloading webpages from 3 news websites).  \n\nBasic cases. (5 min)\n\nSimple demonstration of asyncio code and threaded code and the comparison between them.  \n\nWrite code asynchronously with asyncio. (5 min)\n\nThe difference between synchronous code and asynchronous code and why we should use asynchronous code in asyncio.  \n\nThe main technical detail in writing asyncio code. (5 min)\n\n"yield from" and asyncio.coroutine decorator.\n\nAnother problem that is being solved with asyncio way and threading way. (3 min)\n\nCalling another process and communicate between them with pipe.  \n\nClosing. (2 min)\n\nMisc.\n\nSPEAKER BIO\n\nI am a regular contributor to Python core:\nhttp://hg.python.org/cpython/search/?rev=vajrasky&revcount=200\n\nI am a not-so-regular contributor to Django:\nhttps://github.com/django/django/commits?author=vajrasky\n\nI am a creator of Wallpapoz:\nhttps://github.com/vajrasky/wallpapoz\n\nSLIDES\n\n\nhttp://vajrasky.net/wp-content/uploads/2014/09/asyncio_for_dummies.pdf\n\nFunnel Page: http://in.pycon.org/funnel/2014/186-asyncio-for-dummies\n', 'end': {'dateTime': '2014-09-28T11:30:00+05:30'}, 'location': 'Audi 1', 'summary': 'Async IO for Dummies by Vajrasky Kok'}, {'start': {'dateTime': '2014-09-28T10:45:00+05:30'}, 'description': 'Speaker:Sudhanshu Mishra\nSection:Scientific Computing\nTechnical level:Intermediate\n\n\nThis is a proposal requesting for someone to speak on this topic.\n        If youd like to speak, leave a comment.\n\n\nOBJECTIVE\n\n\nThe sessions intends to demonstrate the usage of BinPy to learn electronics\n\n\nThe session will cover following topics\n\nUsing connectors to connect gates\nUsing inbuilt algorithms to minimize complexity of circuits\nDeveloping registers\nUsing Flip Flops and inbuilt clock to make counters\nShowing how to make ICs using BinPy\nHow to make a complete working circuit using inbuilt ICs and test it with inbuilt oscilloscope\n\nThe sessions intends to demonstrate the usage of BinPy to learn electronics\n\nThe session will cover following topics\n\nThere are a lot of other things which will be explained during the session.\n\nDESCRIPTION\n\nBinPy is a Python library to simulate electronic circuits. It is a pure python library created and maintained by students of BITS Pilani, India targeted towards students and electronics enthusiasts to assist them learn digital electronics by simulating them virtually.  \n\nThe library has a strong educative theme in mind, as a result of which a major portion of the library consists of examples in the form of IPython notebooks.  \n\nAs of now the library supports over 100 ICs and various sequential and combinational circuits covering all basic circuits like gates, flip flops, register files, binary operators, counters, encoder, decoder, etc.  \n\nIt includes modules to implement algorithms like Quine McCluskey algorithm for minimization of digital logic, Moore optimizer, Expression conversions, etc. It also features a command line ASCII oscilloscope to view the time waveforms of the simulations.  \n\nBinPy has been selected for GSoC 2014 under the umbrella of Python Software Foundation so we hope that some interesting features will be added over the summer.\n\nREQUIREMENTS\n\nYou should bring a laptop with following software installed:  \n\nPython\nIPython notebook (optional)\nBinPy (Refer this for help)\n\nSPEAKER BIO\n\nThe speaker is a third year computer science undergrad student at BITS Pilani Goa Campus. He is one of the maintainers of the BinPy project. Beside BinPy he has also contributed to projects like SimpleCV and Krita.  \n\nLINKS\n\nYou can find documentation of the project here http://docs.binpy.org\nGitHub repository is located here https://github.com/BinPy/BinPy\nFunnel Page: http://in.pycon.org/funnel/2014/157-introduction-to-binpy-an-electronic-simulation-library\n', 'end': {'dateTime': '2014-09-28T11:30:00+05:30'}, 'location': 'Audi 2', 'summary': 'Introduction to BinPy - An Electronic Simulation Library by Raghav R V'}, {'start': {'dateTime': '2014-09-28T11:30:00+05:30'}, 'description': "Speaker:Jack Parmer\nSection:Scientific Computing\nTechnical level:Intermediate\n\nOBJECTIVE\n\nThe objective of this talk is to describe new scientific graphing options available to engineers, scientists, and programmers in Python, beyond basic matplotlib. A session attendee will gain a broad overview of the new tools in this field available to them, how to use them, as well as what we might expect in the future. Open-source, IPython notebooks available on GitHub will be used to give examples.\n\nDESCRIPTION\n\nMatplotlib has wonderfully served the Python community as the cornerstone of scientific graphics. Recently, many additional Python plotting options have surfaced, aimed to make it easier to create graphics that are interactive and web-publishable. This talk will outline these new options with some easy-to-follow, IPython notebooks.\n\nREQUIREMENTS\n\nEasy! A laptop with Python or IPython notebook ready-to-go.\n\nSPEAKER BIO\n\nBen Postlethwaite, the Engineering Director at Plotly, will be presenting this talk. Ben works on the Plotly Python and Julia APIs, as well as 3d visualization, Plotly's sharing platform, and backend Django infrastructure. Ben has a masters in Physics from University of British Columbia, and has been working with Python for scientific data and web applications for the past 8 years.\n\nSLIDES\n\n\nhttp://www.slideshare.net/JackParmer/pycon-prez-34137101\n\n\nLINKS\n\nhttp://www.youtube.com/watch?v=zG8FYPFU9n4\nhttp://www.wired.com/2013/12/creating-plots-with-python-and-plotly/\nhttp://nbviewer.ipython.org/gist/jackparmer/7729584\nhttps://twitter.com/plotlygraphs\nFunnel Page: http://in.pycon.org/funnel/2014/150-new-scientific-plotting-in-python\n", 'end': {'dateTime': '2014-09-28T12:15:00+05:30'}, 'location': 'Audi 1', 'summary': 'New Scientific Plotting in Python by Ben Postlethwaite'}, {'start': {'dateTime': '2014-09-28T11:30:00+05:30'}, 'description': 'Speaker:Aditya Manthramurthy\nSection:Web Development\nTechnical level:Intermediate\n\nOBJECTIVE\n\nThis talk will introduce Gevent, how it works and how it can make Python scale. Plivo\'s architecture consists of multiple web-services built on Flask and Django. The talk will outline scaling challenges faced at Plivo, and how we handled them using Gevent with Flask  and Django to achieve high throughput and high CPU utilisation.  \n\nFrom this talk, attendees can expect to have an understanding of Gevent that will help them build highly concurrent webservers, especially with Flask or Django, often with little changes to existing code and without having to learn a complicated callbacks-based abstraction as used in frameworks like Tornado.\n\nDESCRIPTION\n\nGevent gives your Flask/Django application the ability to do asynchronous I/O with little or no modifications! This lets your Python web-server scale to over thousands of threads without running out of memory - C10K with Python, we\'re nearly there!  \n\nAUDIENCE\n\nWeb developers using Django or Flask or a similar framework, who would like to understand how Gevent can help them get much higher concurrency, often with little or no changes to existing code.  \n\nTALK OUTLINE\n\nAn outline of scaling and concurrency challenges at Plivo, and how Gevent helped us solve these problems (~5 minutes) \n\nBlocking I/O, multi-process scaling limitations, spiky workloads and low CPU utilisation were major bottlenecks, that we were able to mitigate and solve using Gevented web-servers.\n\nGevent concepts: Co-routines, event loops, greenlets and monkey-patching (~5 minutes) \n\nGevent is a co-routine based networking library that uses light-weight execution units, called greenlets, to provide a high-level synchronous API on top of a fast event loop provided by libev.\n\nMonkey-patching provides a way to convert existing Python Standard Libraries to be greenlet aware, so they yield execution when they start to do IO.\n\nGevent switches threads of execution, either when the running greenlet yields explicitly, or when the greenlet performs I/O. This requires that libraries doing I/O in an application, are either pure Python or provide a way to be "greened" (for e.g. the PostgreSQL database driver psycopg2).\n\nHow can I tell if Gevent will help my application to scale (~3 minutes) \n\nThings to factor in while making the decision: Is the application IO\nbound or CPU bound? Are "green" alternatives available for libraries doing IO?  \n\nDemo to show Gevent performance and ease of use with Flask (~5 minutes) \n\nAfter an outline of request processing in a typical web-application, we simulate a real-world web-server deployment using Flask and see how performance improves when using Gevent.\n\nPorting applications to use Gevent: what to lookout for (~6 minutes) \n\nLearnings from porting a large Django application to Gevent - on debugging blocking operations, database drivers, and libraries that cannot be "greened" easily.\n\nQuestions (~6 minutes) \n\nSPEAKER BIO\n\nI am a Software Developer at Plivo. I\'ve been programming in Python for over 6 years. At Plivo, I work on scaling and infrastructure management. We use Gevent extensively in our production systems, and I have gained a lot of valuable experience using it, especially with porting a large Django code-base to use gevent.\n\nLINKS\n\nhttps://github.com/donatello\nFunnel Page: http://in.pycon.org/funnel/2014/248-building-highly-scalable-web-services-with-gevent-experiences-at-plivo\n', 'end': {'dateTime': '2014-09-28T12:15:00+05:30'}, 'location': 'Audi 2', 'summary': 'Building highly scalable web-services with Gevent - experiences at Plivo by Aditya Manthramurthy'}, {'start': {'dateTime': '2014-09-28T12:15:00+05:30'}, 'description': 'Speaker:Anand S\nSection:Scientific Computing\nTechnical level:Intermediate\n\nOBJECTIVE\n\nTo understand libraries, techniques and benchmarks to help you speed up your data storage, retrieval and processing.\n\nDESCRIPTION\n\nWorking with data in Python requires making a number of choices, ranging from the simple to the complex.  \n\nShould I use pickle, CSV or JSON? (Ans: CSV).\nWhat do I read it with: csv.DictReader or csv.reader? (Ans: Pandas). \nHow should I parse dates? (Ans: Anything but Pandas / dateutil)\nHow do I optimise numpy calculations? (Ans: Learn vector algebra)\nHow do I run a function in parallel?\nHow to make my program restartable?\nHow do I use multiple cores?\n\nThis session will explain how to benchmark code and share insights on the patterns of programming that make your application faster.\n\nREQUIREMENTS\n\nA good working knowledge of Python and the standard libraries\n\nSPEAKER BIO\n\nAnand is the chief data scientist at Gramener. He explores data stories visually with Python and Javascript.  \n\nHe blogs at http://www.s-anand.net/\n\nLINKS\n\nhttps://www.youtube.com/watch?v=aKCXj1DyEhM\nhttps://www.youtube.com/watch?v=YLiwCKpoW1Q\nhttps://www.youtube.com/watch?v=Xx4sN9bfb2A\nhttps://www.youtube.com/watch?v=JAlZ0uJnqkA\nhttp://www.slideshare.net/gramener/automated-data-analysis-with-python\nFunnel Page: http://in.pycon.org/funnel/2014/165-faster-data-processing-in-python\n', 'end': {'dateTime': '2014-09-28T13:00:00+05:30'}, 'location': 'Audi 1', 'summary': 'Faster data processing in Python by Anand S'}, {'start': {'dateTime': '2014-09-28T13:00:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-28T14:00:00+05:30'}, 'location': '', 'summary': 'Lunch'}, {'start': {'dateTime': '2014-09-28T14:00:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-28T14:45:00+05:30'}, 'location': 'Audi 1', 'summary': 'Panel Discussion'}, {'start': {'dateTime': '2014-09-28T14:45:00+05:30'}, 'description': 'Speaker:Ankit Daftery\nSection:Embedded Python\nTechnical level:Intermediate\n\nOBJECTIVE\n\nThis talk opens up a list of possibilities about how a little Python scripting can be used to leverage a lot of Internet APIs and the Arduino platform to quickly prototype and build useful "connected objects" either for automation, convenience, or sheer fun.\n\nDESCRIPTION\n\nThe session will begin with a brief introduction to the Python tools that exist for hardware, and Arduino in particular, and will proceed to how they can be used in conjunction with several APIs provided by popular (and not-so-well-popular) services. The session will try to cover various approaches possible for implementing trivial to complex hardware based applications, ranging from dataloggers to ubiquitous connected objects, and from robots to mobile activated interactive installations.\n\nSPEAKER BIO\n\nI am currently an Interaction Designer + Creative Technologist at Arduino India.  \n\nI use hardware, software and data constructively to provide tools that empower people to create and communicate. I love building digital objects and fun,quirky electronic projects, and keep on prototyping in my free time. I enjoy teaching technology, and use my making experience to keep on improving how I teach.  \n\nI try to take technology and try to add a human touch to it, to make it friendlier, and more useful.  \n\nI have been working a lot on the Arduino Yun + Web API enabled projects using Python as a scripting language, and am also focussing on teaching beginners and intermediate users how to program for web-enabled hardware.  \n\nLINKS\n\nhttp://ankitdaf.com\nhttps://github.com/ankitdaf\nhttps://vimeo.com/95797667\nhttps://vimeo.com/94160387\nFunnel Page: http://in.pycon.org/funnel/2014/214-python-arduino-and-connected-objects\n', 'end': {'dateTime': '2014-09-28T15:30:00+05:30'}, 'location': 'Audi 1', 'summary': 'Python, Arduino and connected objects by Ankit Daftery'}, {'start': {'dateTime': '2014-09-28T14:45:00+05:30'}, 'description': "Speaker:Anubhav Sinha\nSection:Software Development Tools\nTechnical level:Intermediate\n\nOBJECTIVE\n\nTo discuss a no-nonsense write once run anywhere, very easy to setup python development workflow using modern tools like Vagrant, Docker, Drone and more.\n\nDESCRIPTION\n\nA new developer joins some team which is developing some software A and now it takes ages for the new developer to setup the development environment because of the dependency hell. Moreover, software A is meant to run on OS Z,  but this new developer loves working on his favorite editor E which doesn't ship for OS Z and s/he is now stuck with a compromise while working on OS Z.  And if none of these then, the new developer just finds out that his/her fixes do work on the development environment but refuses to run in production setup due to some known mismatch that the team knew but s/he missed because of being new in the team. I bet most of you have experienced at least one or more of these problems even after years of experience as developers. Not any more. We will discuss a real write once and forget solution with no-nonsense and within a minute development environment setup using hot tools and technologies like Vagrant and Docker. We will also discuss Drone, a light and easy solution for Continuous Integration compared to Jenkins.The ideas discussed here can be used for any other programming language development workflow, useful not only to Python. But, this discussion will be Python specific.\n\nREQUIREMENTS\n\nSome knowledge of vagrant and Docker will be helpful but not a deal breaker. This talk will give you required knowledge of all of the tools required.  \n\nWe will discuss:\n\nDocker\nVagrant\nThe development workflow\nDrone (for CI)\n\nSPEAKER BIO\n\nAnubhav Sinha works for a fast growing startup, Flux7 Labs, Texas, Austin. For past several years he has been mostly involved with web application engineering for the cloud platforms like GAE and AWS. He also has experience in building predictive models using Machine Learning and loves doing Data Science with the Internet of things. He is an Amazon certified architect+developer and a Google certified digital marketeer.\n\nLINKS\n\nhttps://speakerdeck.com/anubhavsinha/pycon2014-anubhav-sinha\nFunnel Page: http://in.pycon.org/funnel/2014/132-development-to-production\n", 'end': {'dateTime': '2014-09-28T15:30:00+05:30'}, 'location': 'Audi 2', 'summary': 'Development to Production by Anubhav Sinha'}, {'start': {'dateTime': '2014-09-28T15:30:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-28T16:00:00+05:30'}, 'location': '', 'summary': 'Tea Break'}, {'start': {'dateTime': '2014-09-28T16:00:00+05:30'}, 'description': 'Speaker:Narahari Allamraju\nSection:Software Development Tools\nTechnical level:Intermediate\n\nOBJECTIVE\n\nLoosely coupled, distributed, even driven, asynchronous - all these are terms that you will hear when you want to build an application that is scalable and handles large amounts of work load as if nothing happened, no sweat. There are many ways of building these, but when you talk about an application distributed across servers and talking to each other, the obvious mechanism is messaging - whether you send your own message or even using simple sockets like with Twisted or if you use a full blown broker like RabbitMQ. Even if you use something like Celery, you will have to choose a messaging backend which you want to use. And this choice is the problem - how to evaluate the various options? You can expect to learn from this session about how you can evaluate the tools and match them to your long term strategy and current requirements and then take an informed decision.  \n\nDESCRIPTION\n\nLoosely coupled, distributed, even driven, asynchronous - all these are terms that you will hear when you want to build an application that is scalable and handles large amounts of work load as if nothing happened, no sweat. There are many ways of building these, but when you talk about an application distributed across servers and talking to each other, the obvious mechanism is messaging - whether you send your own message or even using simple sockets like with Twisted or if you use a full blown broker like RabbitMQ. Even if you use something like Celery, you will have to choose a messaging backend which you want to use.  \n\nAnd this choice is the problem - how to evaluate the various options?  \n\nThe choice is not governed by external factors, although things like licence, cost, support etc make an impact on your final decision. The choice is primarily driven by what your application is built to do, whether it wants to handle only the functionality part and wants the underlying messaging layer to provide guarantees about message delivery and caching, querying etc.  \n\nThis talk will distill my experience with seeing, building and designing such messaging applications and provide a methodology that you can use.  \n\nThe talk will broadly follow these points to flesh out the methodology  \n\nThe basic needs\nDetermining whether the application will benefit by distributing it into components that communicate using a messaging layer\nDetermine of we would like to have one or more instances of each of these components\nDetermine the basic layout of how they will communicate and maybe a simple flow and dependency analysis for each\nIdentifying the underlying patterns that we need when we say we need messaging\nDetermining the the type of interface these components will provide- request-reply or publish subscribe or queuing\nDo we need to separate out messages based on types\nDo we expect certain components to have a higher throughput of messages and do we need to accommodate them in a separate environment\nUnderstanding any additional requirements that we will need and any assumptions of features that we expect the messaging layer to provide for us rather than we build.\nDo we expect the messaging system to provide durable messages, guaranteed delivery?\nDo we expect messages to be persisted to disk for crash recovery?\nDo we need good monitoring tools for the messaging layer?\nHow easy is it provision new queues or topics or new instances of the messaging layer?\nLatency, Routing and Priority\nDetermining what kind of latency do we need for these messages?\nCan we afford messages sitting on a queue for a few hours?\nDo we need message expiry?\nDo we need message priority so that some messages can be routed to be processed faster?\nHow easy is it to route messages on this platform?\nUnderstanding some of these messaging tools and what they provide to us\nRabbitMQ\nZeroMQ\nJMS servers\nTIBCO RV\nRedis\nA database\nComing up with a quick reference matrix that we can use to evaluate\nA brief summary of all the above tools and their best features\nApplying future growth considerations\nThinking about volume growth - will the messaging layer handle a simple 15% year on year growth?\nHow much more storage or how many more brokers do we need if we grww year on year by 50% or more?\nNo previous experience with messaging is required - basic assumption is that you are comfortable with an application where two standalone components doing separate tasks wish to talk to each other.\n\nREQUIREMENTS\n\nBasic knowledge of Python and an idea about distributed applications\n\nSPEAKER BIO\n\nHari is a developer with over 9 years of experience in building large scale messaging and low latency applications using Java at various investment banks, and working on integration projects at large companies. Hari is interested in exploring and building knowledge in other technologies and likes to use Python where possible in daily tasks - primarily using Jython to script some Java test cases and utilities. Hari also likes to explore Django and attempt to build a web application ans is also interested in Celery and ZeroMQ for server side development similar to his experience. \n\nLINKS\n\nLink to the same talk given at PyCon this year - http://pyvideo.org/video/2672/which-messaging-layer-should-you-use-if-you-want \nSlides - https://speakerdeck.com/pycon2014/which-messaging-layer-to-use-in-a-loosely-coupled-distributed-app-by-narahari-allamraju \nFunnel Page: http://in.pycon.org/funnel/2014/135-which-messaging-layer-should-you-use-if-you-want-to-build-a-loosely-coupled-distributed-python-app\n', 'end': {'dateTime': '2014-09-28T16:45:00+05:30'}, 'location': 'Audi 1', 'summary': 'Which messaging layer should you use if you want to build a loosely coupled distributed Python app? by Narahari Allamraju'}, {'start': {'dateTime': '2014-09-28T16:00:00+05:30'}, 'description': 'Speaker:Sonal Raj\nSection:Software Development Tools\nTechnical level:Intermediate\n\nOBJECTIVE\n\nThis talk introduces the world of graphs, their utility and the efficient use of the Neo4J graph database for some super cool day to day applications with the help of py2neo.\n\nDESCRIPTION\n\nThe world is built on graphs and software rotates around it too. Neo4J is a next generation NoSQL graph database that that objectifies and stores records in the form of nodes and relationships, which not only makes it incredibly user-friendly but also robust.  \n\nThis talk introduces graph databases and their utilities and goes on to highlight some cool use cases of graph databases and  use of the RESTful interface of Neo4J. The key areas of focus of the session would include:  \n\n\nIntroduction to Graphs\n\n\nGraph and Data Models\n\n\nNoSQL Databases at their best\n\n\nNeo4J, its installation and configuration\n\n\nWorking with Cypher, the query language for Neo4J\n\n\npy2neo, and how python makes life simpler for graphDb users\n\n\nintegrating cypher queries with py2neo\n\n\nsome cool use cases demonstated.\n\n\nIntroduction to Graphs\n\nGraph and Data Models\n\nNoSQL Databases at their best\n\nNeo4J, its installation and configuration\n\nWorking with Cypher, the query language for Neo4J\n\npy2neo, and how python makes life simpler for graphDb users\n\nintegrating cypher queries with py2neo\n\nsome cool use cases demonstated.\n\nThis talk is designed for those who are fascinated by graphs and would love to learn about more ways to include their use in day to day software needs.\n\nREQUIREMENTS\n\n\nYour choice of Operating System\n\n\nPython 2.7.x\n\n\nNeo4J community edition, the latest version.\n\n\npy2neo. Install through pip or download here\n\n\nYour choice of Operating System\n\nPython 2.7.x\n\nNeo4J community edition, the latest version.\n\npy2neo. Install through pip or download here\n\nSPEAKER BIO\n\nSonal Raj is a pythonista, geek, and an open source developer with a passion for gadgets and technology.  \n\nHe works on Distributed Computing, Real Time processing, Android and other cool stuff in his spare time with Python as the primary weapon. He began his entrepreneural journey with Enfoss and Botcubes.He is currently works at Sigmoid Analytics.  \n\nHe has published code and Contributed to several Open Source Projects. He has also spoken at SERC @ IISc-B and  PyCon 2013.  \n\nSLIDES\n\n\nhttp://www.slideshare.net/sonal-raj/neo4j-and-python-pycon-india-2014-talk\n\n\nLINKS\n\nhttp://www.sonalraj.com/\nhttps://github.com/sonal-raj/\nhttp://www.slideshare.net/sonal-raj/pycon-india-talk\nhttp://www.slideshare.net/sonal-raj/storm-serc-ppt\nFunnel Page: http://in.pycon.org/funnel/2014/252-graph-everything-with-neo4j-and-python\n', 'end': {'dateTime': '2014-09-28T16:45:00+05:30'}, 'location': 'Audi 2', 'summary': 'Graph everything with Neo4J and Python by Sonal Raj'}, {'start': {'dateTime': '2014-09-28T16:45:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-28T17:30:00+05:30'}, 'location': '', 'summary': 'Lightning Talks'}, {'start': {'dateTime': '2014-09-28T17:30:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-28T18:00:00+05:30'}, 'location': 'Audi 1', 'summary': 'Closing Ceremony and Feedback Collection'}, {'start': {'dateTime': '2014-09-28T18:00:00+05:30'}, 'description': '', 'end': {'dateTime': '2014-09-28T19:00:00+05:30'}, 'location': 'Audi 1', 'summary': 'Annual General Meeting (AGM) of Python Software Society of India'}]